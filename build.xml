<?xml version="1.0" encoding="UTF-8"?>

<project name="redstar" default="build" basedir=".">

  <description>
    This is the Ant file that defines the build process for the Redstar
    revision of Project Darkstar.
  </description>

  <!-- First load the user's properties -->
  <property name="user.properties.file"
	    location="${user.home}/.build.properties"/>
  <property file="${user.properties.file}"/>

  <!-- VARIABLE DEFINITIONS -->

  <!-- Build location -->
  <property name="build.dir" location="build"/>

  <!-- Values for controlling compilation -->
  <property name="javac.source" value="1.5"/>
  <property name="javac.compilerargs"
	    value="-Xlint:unchecked,deprecation"/>

  <!-- Values for building the server -->
  <property name="server.jar" location="${build.dir}/lib/sgs.jar"/>

  <!-- Values for the JavaDocs -->
  <property name="project.name" value="Sun Game Server"/>
  <property name="project.version" value="0.2"/>
  <property name="jdk.doc.api.url"
	    value="http://java.sun.com/j2se/1.5/docs/api"/>
  <property name="jdk.package.list" value="etc/jdk5.0_package_list"/>

  <!-- Values for programming style checks -->
  <import file="${checkstyle.dir}/checkstyle_task.xml" optional="true"/>
  <property name="checkstyle.packages"
	    value="com.sun.sgs.app,
		   com.sun.sgs.impl.service.data,
		   com.sun.sgs.impl.service.data.store,
		   com.sun.sgs.impl.service.transaction,
		   com.sun.sgs.impl.util,
		   com.sun.sgs.service"/>
  <property name="checkstyle.packages.file"
	    value="${build.dir}/checkstyle_packages"/>

  <!-- Values for testing -->
  <property name="test.logging" location="test/test.logging"/>
  <property name="test.jvm.args"
	    value="-Djava.util.logging.config.file=${test.logging}"/>
  <property name="test.formatter.type" value="plain"/>
  <property name="test.showoutput" value="false"/>
  <property name="test.include" value="**/Test*.java"/>

  <!-- Berkeley DB -->
  <property name="bdb.lib.dir" location="/usr/local/BerkeleyDB.4.4/lib"/>

  <!-- TARGET DEFINITIONS -->

  <!-- Builds everything -->
  <target name="all" depends="jar, javadoc, checkstyle, test"/>

  <!-- Builds a debug version of the complete project -->
  <target name="build" depends="build-server,build-client"/>

  <!-- Builds the server -->
  <target name="build-server">
    <mkdir dir="${build.dir}/classes/server"/>
    <depend srcdir="j2se"
	    destdir="${build.dir}/classes/server"
	    cache="${build.dir}/depend"
	    closure="true"/>
    <javac includeAntRuntime="no" debug="on" deprecation="on"
           srcdir="src/server/j2se" destdir="${build.dir}/classes/server"
           classpath="${build.dir}/classes/server;${bdb.lib.dir}/db.jar"
	   source="${javac.source}">
      <compilerarg value="${javac.compilerargs}"/>
    </javac>
  </target>

  <!-- Builds the client -->
  <target name="build-client">
    <mkdir dir="${build.dir}/classes/client"/>
    <depend srcdir="j2se"
	    destdir="${build.dir}/classes/client"
	    cache="${build.dir}/depend"
	    closure="true"/>
    <javac includeAntRuntime="no" debug="on" deprecation="on"
           srcdir="src/client/j2se" destdir="${build.dir}/classes/client"
           classpath="${build.dir}/classes/client" source="${javac.source}">
      <compilerarg value="${javac.compilerargs}"/>
    </javac>
  </target>

  <!-- Removes all built files and all ~ files -->
  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete>
      <fileset dir="." defaultexcludes="no" includes="**/*~"/>
    </delete>
  </target>

  <!-- Builds the documentation -->
  <target name="doc" depends="javadoc"/>

  <!-- Build the JavaDoc from the source -->
  <target name="javadoc" depends="javadoc-server,javadoc-client"/>

  <!-- Build the server JavaDoc -->
  <target name="javadoc-server" depends="build-server">
    <javadoc sourcepath="src/server/j2se" destdir="${build.dir}/javadoc/server"
             classpath="${build.dir}/classes/server;${bdb.lib.dir}/db.jar"
	     packagenames="com.sun.*"
             overview="src/server/j2se/overview.html"
             windowtitle="${project.name}" doctitle="${project.name}"
	     author="no">
      <link href="${jdk.doc.api.url}"
	    offline="true"
	    packagelistLoc="${jdk.package.list}"/>
      <footer>
        <![CDATA[<font size="-1">Sun Game Server, Version
        ${project.version}</font>]]>
      </footer>
      <bottom>
        <![CDATA[<font size="-1">Copyright 2006 Sun Microsystems,
        Inc. All rights reserved. Use is subject to license
        terms.<p>Sun, Sun Microsystems, the Sun Logo, and Java are
        trademarks or registered trademarks of Sun Microsystems, Inc. in
        the US and other countries.</font>]]>
      </bottom>
    </javadoc>
  </target>

  <!-- Build the client JavaDoc -->
  <target name="javadoc-client" depends="build-client">
    <javadoc sourcepath="src/client/j2se" destdir="${build.dir}/javadoc/client"
             classpath="${build.dir}/classes/client" packagenames="com.sun.*"
             overview="src/client/j2se/overview.html"
             windowtitle="${project.name}" doctitle="${project.name}"
	     author="no">
      <link href="${jdk.doc.api.url}"
	    offline="true"
	    packagelistLoc="${jdk.package.list}"/>
      <footer>
        <![CDATA[<font size="-1">Project Darkstar: Version
        ${project.version}</font>]]>
      </footer>
      <bottom>
        <![CDATA[<font size="-1">Copyright 2006 Sun Microsystems,
        Inc. All rights reserved. Use is subject to license
        terms.<p>Sun, Sun Microsystems, the Sun Logo, and Java are
        trademarks or registered trademarks of Sun Microsystems, Inc. in
        the US and other countries.</font>]]>
      </bottom>
    </javadoc>
  </target>

  <!-- Builds the jar files for the project classes -->
  <target name="jar" depends="jar-server"/>

  <!-- builds the server jar file -->
  <target name="jar-server" depends="build-server">
    <mkdir dir="${build.dir}/lib"/>
    <jar destfile="${server.jar}" basedir="${build.dir}/classes/server"/>
  </target>

  <!-- Checks Java coding style -->
  <target name="checkstyle"
	  depends="build,-checkstyle.init,-checkstyle.includes"
	  description="Checks Java coding style">
      <checkstyle config="${neuromancer_checks.xml}"
		  classpath="${build.dir}/classes/server">
	  <fileset dir="src/server/j2se"
		   includes="${checkstyle.includes}"/>
      </checkstyle>
  </target>

  <!-- Verify checkstyle.dir is set, calculate checkstyle.includes, and
       build the checkjars target in checkstyle.dir. -->
  <target name="-checkstyle.init">
      <fail unless="checkstyle.dir"
	    message="The checkstyle.dir property must be set to a directory containing the checkstyle subproject"/>
      <ant dir="${checkstyle.dir}" target="checkjars" inheritAll="false"/>
  </target>

  <!-- Convert from package names to filenames -->
  <target name="-checkstyle.includes">
    <mkdir dir="${build.dir}"/>
    <echo message="${checkstyle.packages}"
	  file="${checkstyle.packages.file}"/>
    <loadfile srcFile="${checkstyle.packages.file}"
	      property="checkstyle.includes">
      <filterchain>
	<tokenfilter>
	  <!-- Get tokens delimited by commas and spaces -->
	  <stringtokenizer delims=", "/>
	  <!-- Replace all '.' with '/' in each token -->
	  <replaceregex pattern="[.]" replace="/" flags="g"/>
	  <!-- Append '/*.java' to each non-empty token -->
	  <replaceregex pattern=".+" replace="\0/*.java"/>
	</tokenfilter>
      </filterchain>
    </loadfile>
    <delete file="${checkstyle.packages.file}"/>
  </target>

  <!-- Compile and run tests -->
  <target name="test" depends="-test.classes"
	  description="Compiles and runs tests">
    <mkdir dir="${build.dir}/test"/>
    <delete dir="${build.dir}/test/output"/>
    <mkdir dir="${build.dir}/test/output"/>
    <!-- XXX: We'd like to use forkmode="once" here, but that doesn't
	 seem to work in Ant 1.6.1 -tjb@sun.com (01/13/2006)
      -->
    <junit fork="true"
	   printsummary="on"
	   showoutput="${test.showoutput}"
	   tempdir="${build.dir}/test/output"
	   failureproperty="tests.failed">
      <jvmarg line="${test.jvm.args}"/>
      <jvmarg value="-Djava.library.path=${bdb.lib.dir}"/>
      <jvmarg value="-Djava.io.tmpdir=${build.dir}/test/output"/>
      <classpath path="${build.dir}/test/classes;
		       ${build.dir}/classes/server;
		       ${bdb.lib.dir}/db.jar"/>
      <syspropertyset>
	<propertyref prefix="test."/>
      </syspropertyset>
      <!-- XXX: This doesn't work in Ant 1.6.1,
	   either. -tjb@sun.com (01/13/2006) -->
      <!-- <assertions>
	     <enable/>
	   </assertions> -->
      <jvmarg value="-enableassertions"/>
      <formatter type="${test.formatter.type}"/>
      <batchtest todir="${build.dir}/test/output">
	<fileset dir="test">
	  <include name="${test.include}"/>
	</fileset>
      </batchtest>
    </junit>
    <fail if="tests.failed" message="Some tests failed"/>
  </target>

  <!-- Compiles tests -->
  <target name="-test.classes" depends="build">
    <mkdir dir="${build.dir}/test/classes"/>
    <depend srcdir="test"
	    destdir="${build.dir}/test/classes"
	    cache="${build.dir}/test/depend"
	    closure="true"/>
    <javac srcdir="test"
	   destdir="${build.dir}/test/classes"
	   includeAntRuntime="yes"
	   debug="on"
	   source="${javac.source}"
	   classpath="${build.dir}/classes/server"
	   includes="**/*.java">
      <compilerarg line="${javac.compilerargs}"/>
    </javac>
  </target>

</project>
