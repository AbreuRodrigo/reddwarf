<?xml version="1.0" encoding="UTF-8"?>
<!-- All game deployment descriptors are contained within with a GAMEAPP
     block.  gamename is mandetory and is the name by which the client
     will find the connection points to the game. It MUST be unique on
     this server for discovery to work correctly
-->     
<GAMEAPP gamename="ChatTest"> 
	<!-- The GLEAPP is optional.  If it is not defined then a game has no
	     GLE level logic and just uses the Communications tier 
	     If there is a GLEAPP it must give the FQCN for its boot GLC
	     and the URL to find the app's JAR file in.     
	-->   
	<GLEAPP bootclass="com.sun.gi.apps.chattest.ChatTestBoot" classpathURL="file:ChatTest.jar" />    	
	
	<!-- A game can define 0 or more USERMANAGER blocks.  Each USERMANAGER
	     block decribes an instance of a user manager to create.  If
	     there are no user manage blocks then the app is clientless and
	     there is no way for a client to discover and connect to the app
	     
	     The serverclass is the FQCN of a calss that implements the 
	     UserManager interface.  An instance of this class will be created
	     and attached to the same router as the GLEAPP.  Its will also
	     be reported thorugh discovery for a client to connect to.
	-->     
	<USERMANAGER serverclass="com.sun.gi.comm.users.server.impl.TCPIPUserManager"
				 reconnect_key_ttl="30">        
		<!-- PARAMETER blocks define a set of name,value tuples that are
		     passed to the instanxe of the user manager class when it is 
		     created.  For the required and optional parameters, see the
		     javadoc for the given user manager class.
		-->     		 
		<PARAMETER tag="host" value="127.0.0.1" />        
		<PARAMETER tag="port" value="1150" />  
		<!-- The optional Validator block defines a validator to use to validate
		     client login.  If no validator is defined then login is automatic
		     on connection.
		     
		     If a validator is defined then moudleclass must be its FQCN.
		-->     
		<VALIDATOR moduleclass="com.sun.gi.comm.users.validation.impl.FlatFileUserValidator">
		<!-- Validators use PARAMETER blocks the exact same way user managers
		     do above.
		-->     
			<PARAMETER tag="password_file_url" value="file:passwd.txt" />
		</VALIDATOR>		
	</USERMANAGER>
</GAMEAPP>
