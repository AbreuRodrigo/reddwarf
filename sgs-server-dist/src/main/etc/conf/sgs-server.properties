# Project Darkstar server properties

# ======================================================================
#
# Required Properties
#
# ======================================================================

# The name of the application.  If running in a multi-node configuration,
# this name must be the same for each node.  In most situations, this
# property should not be set here, but rather in the app.properties
# configuration file embedded in the application jar file.
#
#com.sun.sgs.app.name

# The AppListener for the application, specified as a fully qualified
# class name.  In most situations, this
# property should not be set here, but rather in the app.properties
# configuration file embedded in the application jar file.
#
#com.sun.sgs.app.listener

# The root directory for the application, which specifies local file
# system space available for Project Darkstar use.  The Project Darkstar
# server is run with SGS_HOME as the current working directory, so this
# path can be a relative path to that directory.
#
com.sun.sgs.app.root=data

# The TCP port on which to listen for client connections.
#
#com.sun.sgs.app.port=1139


# ======================================================================

# Set this property to specify the node type for this server
# Valid values are singleNode, coreServerNode, and appNode
# If no value is specified, singleNode is used by default
#
#com.sun.sgs.node.type=singleNode


# ======================================================================
#
# Core Server Port Properties (Optional)
#
# ======================================================================

# The TCP port for the data service's shared network server
#
#com.sun.sgs.impl.service.data.store.net.server.port=44530

# The TCP port for the watchdog service's internal server
#
#com.sun.sgs.impl.service.watchdog.server.port=44533

# The TCP port for the node mapping service's internal server
#
#com.sun.sgs.impl.service.nodemap.server.port


# ======================================================================
#
# DataService Properties (Optional)
#
# ======================================================================

# The directory in which to store database files.  Each single node or core
# server node requires its own, unique directory
#
#com.sun.sgs.impl.service.data.store.DataStoreImpl.directory

# The name of the class that implements the underlying database.  The 
# default value selects a database implementation based on Berkeley DB.
# Optionally, Berkeley DB Java Edition can be specified.  Note that the
# value of this property will be overridden by the bootup procedure
# if the BDB_TYPE property in sgs-boot.properties is specified.
#
#com.sun.sgs.impl.service.data.store.db.environment.class=com.sun.sgs.impl.service.data.store.db.bdb.BdbEnvironment
#com.sun.sgs.impl.service.data.store.db.environment.class=com.sun.sgs.impl.service.data.store.db.je.JeEnvironment

# The size in bytes of the Berkeley DB cache.  The value must not be less than
# 20000.  Using a cache too small can introduce significant reduction in
# performance
#
#com.sun.sgs.impl.service.data.store.db.bdb.cache.size=128000000

# Whether to automatically remove database log files that are no longer needed.
# Note that automatic log file removal is likely to make catastrophic recovery
# of the database impossible, because log files that may be needed will not
# have been backed up.
#
#com.sun.sgs.impl.service.data.store.db.bdb.remove.logs=false

# ======================================================================
#
# Watchdog Service Properties (Optional)
#
# ======================================================================

# The time interval, in milliseconds, in which application nodes must contact
# the watchdog service's internal server in order to be considered alive.
#
#com.sun.sgs.impl.service.watchdog.server.renew.interval

# ======================================================================
#
# ClientSessionService Properties (Optional)
#
# ======================================================================

# The time, in milliseconds, in which a disconnecting client is allowed to
# close a connection before it is closed by the server.  The delay must be
# greather than or equal to 200 milliseconds.
#
#com.sun.sgs.impl.service.session.disconnect.delay=1000

# ======================================================================
#
# System Properties (Optional)
#
# ======================================================================

# A colon separated list fo IdentityAuthenticators to use for the application.
# The order defines the precedence when authenticating an identity. The
# default authenticator simply accepts any name-password pair.
#
#com.sun.sgs.app.authenticators

# The profiling level.  Valid leves are
#  min - minimal profiling data is collected
#  medium - more data is collected, but is still appropriate for monitoring a
#           production system
#  max - all available profiling data is collected.  This level may only be
#        appropriate for debugging
#
#com.sun.sgs.impl.kernel.profile.level=min

# A colon separated list of profile listeners, which consume profile output.
# See the individual class javadoc for profile listener implementations.
#
#com.sun.sgs.impl.kernel.profile.listeners

# The number of initial threads used to process transactional tasks
#
#com.sun.sgs.impl.kernel.transaction.threads=4

# The number of initial threads used to process non-transactional tasks
#
#com.sun.sgs.impl.kernel.task.threads=4

# ======================================================================
#
# Debug and Test Properties
#
# ======================================================================

# The maximum amount of time in milliseconds that a transaction be permitted
# to run before it is a candidate for being aborted.  Increasing this timeout
# is useful when attaching a debugger to a node, but can increase game latency.
#
#com.sun.sgs.txn.timeout=100

