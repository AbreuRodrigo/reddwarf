<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- The chat-client module is a standard jar package of chat classes
       used exclusively by the client -->

  <parent>
    <groupId>com.projectdarkstar.example.chat</groupId>
    <artifactId>chat</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <artifactId>chat-client</artifactId>
  <name>Chat Example Client</name>
  <packaging>jar</packaging>

  <dependencies>
    <!-- Compile time dependencies -->
    <dependency>
      <groupId>com.projectdarkstar.client</groupId>
      <artifactId>sgs-client-api</artifactId>
    </dependency>

    <!-- Runtime dependencies -->
    <dependency>
      <groupId>com.projectdarkstar.client</groupId>
      <artifactId>sgs-client</artifactId>
      <scope>runtime</scope>
    </dependency>
  </dependencies>


  <build>
    <plugins>

      <!-- The antrun plugin is configured to run the app outside
	   of the build lifecycle via the command line.
	   However, the lifecycle must be run up through the generate-test-resources
	   phase for the necessary items to be in place for the app to run.
	   In order to run, use the following command:
	   mvn generate-test-resources antrun:run -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
	<configuration>
	  <tasks>
	    <java classname="com.sun.sgs.example.chat.client.ChatClient"
		  fork="true">
	      <jvmarg line="${run.jvm.args}"/>
	      <sysproperty key="java.util.logging.config.file"
			   file="${run.logging}"/>
	      <classpath>
		<path refid="maven.test.classpath"/>
	      </classpath>
	    </java>
	  </tasks>
	</configuration>
      </plugin>

    </plugins>
  </build>

  <properties>
    <run.jvm.args></run.jvm.args>
    <run.logging>${basedir}/src/test/properties/logging.properties</run.logging>
  </properties>


</project>
